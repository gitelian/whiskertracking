%HSVMOVIETRACES Make plots of angle, set-point, phase, and run speed for a
% high speed movie.
% INPUT:
% trialNum: the trial number to make a movie of. This corresponds to the
% nth movie in the sorted high speed movie file list.
% numFrames: number of frames in the movie.
% tMov: time vector for the traces
% numOfNans: number of nans used to put before and after the traces.
% angleMatInterp: vector of interpolated angle values for each frame.
% setpointMat: vector of interpolated set-point values for each frame.
% phaseMat: vector of interpolated phase values for each frame.
% velocity: vector of velocity  values for each frame.
%
% The inputs to this function should be generated by hsvMovieMaker.m
%
% Output: A saved avi movie file in the local directory. Make sure you have
% write permissions.
%
% Adesnik Lab
% Greg I. Telian
% 20150528

function hsvmovietraces(trialNum,numFrames,tMov,numOfNans,...
    angleMatInterp,setpointMat,phaseMat,velocity)

video = VideoWriter(['Position-' num2str(trialNum) 'traces-movie.avi'],'Motion JPEG AVI');
set(video,'FrameRate',30);
open(video)
h = figure('Position',[50 200 300 700]);

angleYlims    = [80 180];
phaseYlims    = [-pi pi];
velocityYlims = [0 80];

for frame = 1:numFrames
   midTime = tMov((frame+numOfNans));
   figure(h);
   subplot(3,1,1)
   plot(tMov(frame:(frame + numOfNans*2)),angleMatInterp(frame:(frame + numOfNans*2)),...
       [midTime midTime],angleYlims,'k');
   hold on;
   plot(tMov(frame:(frame + numOfNans*2)),setpointMat(frame:(frame + numOfNans*2)),'r',...
       [midTime midTime],angleYlims,'k');
   hold off;
   xlim([tMov(frame) tMov(frame + numOfNans*2)])
   ylim([80 180])
   axis square
   ylabel('angle (deg)')

   subplot(3,1,2)
   plot(tMov(frame:(frame + numOfNans*2)),phaseMat(frame:(frame + numOfNans*2)),...
       [midTime midTime],phaseYlims,'k');
   xlim([tMov(frame) tMov(frame + numOfNans*2)])
   ylim([-pi pi])
   axis square
   ylabel('phase (rad)')

   subplot(3,1,3)
   plot(tMov(frame:(frame + numOfNans*2)),velocity(frame:(frame + numOfNans*2)),...
       [midTime midTime],velocityYlims,'k');
   xlim([tMov(frame) tMov(frame + numOfNans*2)])
   ylim(velocityYlims)
   axis square
   ylabel('velocity (cm/s)')
   xlabel('time (s)')

   hold off
   img = getframe(h);
   writeVideo(video,img);

end

video.close;
